telnet 127.0.0.1 20880

// CSBindAndConnect详情见flow，不赘述

dubbo>help

InternalDecoder decode(ChannelHandlerContext ctx, ByteBuf input, List<Object> out)
	// ....
	Object msg = codec.decode(channel, message);
		DubboCountCodec decode
			// ...
			Object obj = codec.decode(channel, buffer);
				ExchangeCodec decode
					int readable = buffer.readableBytes();
			        byte[] header = new byte[Math.min(readable, HEADER_LENGTH)];
			        buffer.readBytes(header);
			        return decode(channel, buffer, readable, header);
			        	if (readable > 0 && header[0] != MAGIC_HIGH
				                || readable > 1 && header[1] != MAGIC_LOW) {
				            // 不走
				            int length = header.length;
				            if (header.length < readable) {
				                header = Bytes.copyOf(header, readable);
				                buffer.readBytes(header, length, readable - length);
				            }
				            // 不走
				            for (int i = 1; i < header.length - 1; i++) {
				                if (header[i] == MAGIC_HIGH && header[i + 1] == MAGIC_LOW) {
				                    buffer.readerIndex(buffer.readerIndex() - header.length + i);
				                    header = Bytes.copyOf(header, i);
				                    break;
				                }
				            }

				            return super.decode(channel, buffer, readable, header);

				            	TelnetCodec decode(Channel channel, ChannelBuffer buffer, int readable, byte[] message)
				            		// 代码较长，不粘贴
				        }
				        // ....
			// ...
	// ....

编码完成后走channelRead逻辑，在rpc模块看，这里不追溯，只描述telnet相关

HeaderExchangeHandler

	final ExchangeChannel exchangeChannel = HeaderExchangeChannel.getOrAddChannel(channel);
    if (message instanceof Request) {
        // ...
    } else if (message instanceof Response) {
        // ...

    } else if (message instanceof String) {
        if (isClientSide(channel)) {
            Exception e = new Exception("Dubbo client can not supported string message: " + message + " in channel: " + channel + ", url: " + channel.getUrl());
            logger.error(e.getMessage(), e);
        } else {
            String echo = handler.telnet(channel, (String) message);
            	// 另换行
            if (echo != null && echo.length() > 0) {
                channel.send(echo);
                 // 另换行 走编码逻辑
            }
        }
    } else {
    	// ....
    }


TelnetHandlerAdapter telnet(Channel channel, String message) // this为requestHandler
	// 暂时不粘贴了 看源码

// ====================================================================
InternalEncoder encode(ChannelHandlerContext ctx, Object msg, ByteBuf out) throws Exception {
        
        ChannelBuffer buffer = new NettyBackedChannelBuffer(out);
        Channel ch = ctx.channel();
        NettyChannel channel = NettyChannel.getOrAddChannel(ch, url, handler);
        
        codec.encode(channel, buffer, msg);
        	
        	DubboCountCodec
        		
        		codec.encode(channel, buffer, msg);
        			
        			ExchangeCodec encode(Channel channel, ChannelBuffer buffer, Object msg) throws IOException {
				        //....
				         else {
				            
				            super.encode(channel, buffer, msg);
				            	
				            	TelnetCodec encode
				            		if (message instanceof String) {
							            if (isClientSide(channel)) {
							                message = message + "\r\n";
							            }
							            byte[] msgData = ((String) message).getBytes(getCharset(channel).name());
							            buffer.writeBytes(msgData);
							        } else {
							            super.encode(channel, buffer, message);
							        }
				        }
				    }
    }


// ====================================================================

telnet展示 

dubbo>help 
Please input "help [command]" show detail.
 clear [lines]  - Clear screen.
 exit           - Exit the telnet.
 help [command] - Show help.
 status [-l]    - Show status.
 log level      - Change log level or show log
 // ====================================================================
